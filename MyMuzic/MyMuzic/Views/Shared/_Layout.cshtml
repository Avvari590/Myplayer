<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewBag.Title - My ASP.NET Application</title>
    @Styles.Render("~/Content/css")
    @Scripts.Render("~/bundles/modernizr")
    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/bootstrap")
    @RenderSection("scripts", required: false)
    <link href="//netdna.bootstrapcdn.com/font-awesome/4.0.0/css/font-awesome.css" rel="stylesheet">
    <script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jquery/1.7.0/jquery.min.js"></script>    
</head>

<body>
    <style>
        /*COLORS*/
        .color-red {
            color: #FF0000;
        }

        .color-green {
            color: #6cbc42;
        }

        .color-blue {
            color: #0080c5;
        }

        .color-twitter {
            color: #00aced;
        }

        .color-facebook {
            color: #00539f;
        }

        .color-linkedin {
            color: #0176b5;
        }

        /*NAVBAR STYLES*/
        .navbar-border {
            border-bottom: solid 5px #0080c5;
        }

        .login-panel {
            min-width: 250px;
            border-top: 14px solid #0080c5;
            border-right: 1px solid #0080c5;
            border-bottom-right-radius: 0.5em;
            -moz-border-radius-bottomright: 0.5em;
            border-bottom: 3px solid #0080c5;
            border-left: 1px solid #0080c5;
            border-bottom-left-radius: 0.5em;
            -moz-border-radius-bottomleft: 0.5em;
        }

        .dropdown-header {
            display: block !imnportant;
            padding-bottom: 30px;
            height: 10px;
        }

        .login-header {
            font-size: 20px;
            font-weight: bold;
            display: inline;
            float: left;
        }

        .forgot-password {
            font-size: 10px;
            display: inline;
            float: right;
            vertical-align: bottom;
            padding-top: 10px;
        }

        .center-text {
            text-align: center;
        }

        .error-message {
            font-size: 11px;
        }

        td, th {
            vertical-align: middle !important;
        }

        .left {
            float: left;
            position: absolute;
            background: -webkit-linear-gradient(0deg, rgb(1, 93, 123) 10%, rgb(5, 132, 173) 90%);
            background: -o-linear-gradient(0deg, rgb(1, 93, 123) 10%, rgb(5, 132, 173) 90%);
            background: linear-gradient(0deg, rgb(1, 93, 123) 10%, rgb(5, 132, 173) 90%);
            white-space: nowrap;
            width: 50px;
            height: 78.5vh;
            z-index: 1;
            transition: width 0.5s ease-out;
            transform-origin: top left;
            border-radius: 6px;
            box-shadow: 0px 16px 50px rgba(53, 52, 52, 0.55);
        }

        .rightup {
            float: right;
            margin-left: 65px;
            white-space: nowrap;
            background: -webkit-linear-gradient(0deg, rgb(1, 93, 123) 10%, rgb(5, 132, 173) 90%);
            background: -o-linear-gradient(0deg, rgb(1, 93, 123) 10%, rgb(5, 132, 173) 90%);
            background: linear-gradient(0deg, rgb(1, 93, 123) 10%, rgb(5, 132, 173) 90%);
            width: 95%;
            height: 67vh;
            position: absolute;
            border-radius: 6px;
            box-shadow: 0px 16px 50px rgba(53, 52, 52, 0.55);
        }

        .rightdown {
            float: right;
            margin-left: 65px;
            white-space: nowrap;
            width: 95%;
            height: 9vh;
            position: absolute;
            margin-top: 69vh;
        }

        .left:hover {
            width: 250px;
            z-index: 10;
            transition: width 0.5s ease-out;
        }

        .item:hover {
            background-color: #ccc;
        }

        .left .glyphicon {
            margin: 15px;
            width: 20px;
            color: #fff;
        }

        span.glyphicon.glyphicon-refresh {
            font-size: 17px;
            vertical-align: middle !important;
        }

        .item {
            height: 50px;
            overflow: hidden;
            color: #fff;
        }

        .title {
            background-color: #eee;
            border-style: solid;
            border-color: #ccc;
            border-width: 1px;
            box-sizing: border-box;
            text-align: center;
            border-top-left-radius: 6px;
            border-top-right-radius: 6px;
        }

        .footer {
            position: absolute;
            bottom: 0;
            width: 98.5%;
        }

        h1, h2 {
            color: #fff;
            text-align: center;
        }

        h1 {
            margin: 150px auto 30px auto;
        }

        .demo {
            /*max-width: 800px;
            margin: 20px auto;*/
        }
    </style>
    <style>
        /*Player CSS*/
        @@media only screen and (max-width: 610px) {
            .track-picture-container {
                display: none;
                opacity: 0;
            }

            .track-container {
                width: 100% !important;
            }

            .playerNameRes {
                font-size: 30%;
                float: right;
                bottom: 10px;
                position: relative;
                right: 1px;
                opacity: 1 !important;
                padding: 0px 10px 0px 8px;
            }

            .track-control-group {
                padding-left: 7%;
            }
        }

        @@media only screen and (max-width: 610px) {
            .track-control-group {
                padding-left: 15%;
            }
        }

        #vpplayer {
            height: 85px;
            color: #fff;
            display: inline-block;
            width: 100%;
            background: -webkit-linear-gradient(0deg, rgb(1, 93, 123) 10%, rgb(5, 132, 173) 90%);
            background: -o-linear-gradient(0deg, rgb(1, 93, 123) 10%, rgb(5, 132, 173) 90%);
            background: linear-gradient(0deg, rgb(1, 93, 123) 10%, rgb(5, 132, 173) 90%);
            border-radius: 6px;
            box-shadow: 0px 16px 50px rgba(53, 52, 52, 0.55);
            border-top: 1px solid #067092;
            border-bottom: 1px solid rgba(1, 78, 103, 0.94);
            border-right: 1px solid #036e91;
            border-left: 1px solid #036e91;
            text-shadow: 1px 1px 3px #000;
        }

        .playerHeadPhone {
            font-size: 50px;
            width: 100%;
            height: 100%;
            text-align: center;
        }

        .playerName {
            font-size: 35%;
            padding: 0px;
            width: 100%;
            text-align: center;
        }

        .playerNameRes {
            opacity: 0;
            font-size: 30%;
            float: right;
            bottom: 10px;
            position: relative;
            right: 1px;
            padding: 0px 10px 0px 8px;
        }

        .track-picture-container {
            width: 20%;
            height: 100%;
            float: left;
            padding: 10px;
            border-right: 1px solid #333;
            box-shadow: inset -1px 0px 0px rgb(11, 149, 193);
        }

        .track-container {
            width: 80%;
            float: left;
            padding: 5px;
            height: 100%;
        }

        .track-data-element-container {
            width: 100%;
            height: 45%;
            background: linear-gradient(#102931, #1e4652);
            background: -webkit-linear-gradient(#102931, #1e4652);
            background: -o-linear-gradient(#102931, #1e4652);
            border: 1px solid #0f252d;
            border-radius: 6px;
        }

        .track-name-details {
            width: 32%;
            height: 100%;
            display: block;
            float: left;
            border-right: 1px solid #000;
            box-shadow: inset -1px 0px 0px #26515f;
            -moz-box-shadow: inset -1px 0px 0px #26515f;
            -webkit-box-shadow: inset -1px 0px 0px #26515f;
        }

        .track-name {
            width: 66%;
            margin: 0px 1% 0px 1%;
            float: left;
            height: 100%;
            padding: 14px;
            white-space: nowrap;
            overflow: hidden;
            position: relative;
        }

        #trackName {
            display: inline;
            font-size: 10px;
            text-shadow: 0px 0px 10px rgba(255, 255, 255, 0.61);
            position: absolute;
        }

        .track-name marquee {
            font-size: small;
        }

        .track-control-container {
            height: 58%;
        }

        .track-seek-container {
            height: 53%;
            display: block;
            width: 100%;
        }

        .time {
            font-size: 10px;
        }

        .startTime {
            float: left;
            padding: 3px;
        }

        .endTime {
            float: right;
            padding: 3px;
        }

        .track-controlelements-container {
            height: 47%;
        }

        .track-control-group {
            height: 100%;
            width: 100%;
            margin: 0 auto;
            text-align: center;
        }

        .rewind, .forward, .play, .volume, .pause, .repeat {
            display: inline-block;
            padding: 5px 10px 5px 10px;
            cursor: pointer;
            transition: all 0.7s;
        }

        .volume-container {
            position: relative;
            display: inline-block;
            top: -25px;
        }

        .equalizer {
            top: -1px;
            right: 0;
            left: 0;
            height: 100%;
            padding: 10px;
        }


        .bar {
            display: inline-block;
            width: 2%;
            margin-top: 21px;
            height: 10%;
            margin-right: 1%;
            background: skyblue;
            -webkit-transition: all 0.5s ease-out;
            -moz-transition: all 0.5s ease-out;
            transition: all 0.5s ease-out;
            -webkit-transform-origin: bottom;
            -moz-transform-origin: bottom;
            transform-origin: bottom
        }

        input[type=range] {
            -webkit-appearance: none;
            width: 100%;
            padding: 0px;
        }

            input[type=range]:focus {
                outline: none;
            }

            input[type=range]::-webkit-slider-runnable-track {
                width: 100%;
                height: 5px;
                cursor: pointer;
                animate: 0.2s;
                box-shadow: inset -1px 0px 0px #000;
                background: #000;
            }

            input[type=range]::-webkit-slider-thumb {
                box-shadow: 0px 0px 0px #000000, 0px 0px 0px #0d0d0d;
                border: 0px solid #000000;
                height: 10px;
                width: 10px;
                border-radius: 7px;
                background: #fff;
                cursor: pointer;
                -webkit-appearance: none;
                margin-top: -2.8px;
            }

            input[type=range]::-moz-range-track {
                width: 100%;
                height: 5px;
                cursor: pointer;
                animate: 0.2s;
                box-shadow: inset -1px 0px 0px #000;
                background: #000;
            }

            input[type=range]::-moz-range-thumb {
                box-shadow: 0px 0px 0px #000000, 0px 0px 0px #0d0d0d;
                border: 0px solid #000000;
                height: 10px;
                width: 10px;
                border-radius: 7px;
                background: #fff;
                cursor: pointer;
                -webkit-appearance: none;
                margin-top: -3.6px;
            }

            input[type=range]::-ms-track {
                width: 100%;
                height: 5px;
                cursor: pointer;
                animate: 0.2s;
                box-shadow: inset -1px 0px 0px #000;
                background: #000;
            }

            input[type=range]::-ms-fill-lower {
                background: #000;
                border: 0px solid #000101;
                border-radius: 50px;
                box-shadow: 0px 0px 0px #000000, 0px 0px 0px #0d0d0d;
            }

            input[type=range]::-ms-fill-upper {
                background: #000;
                border: 0px solid #000101;
                border-radius: 50px;
                box-shadow: 0px 0px 0px #000000, 0px 0px 0px #0d0d0d;
            }

            input[type=range]::-ms-thumb {
                box-shadow: 0px 0px 0px #000000, 0px 0px 0px #0d0d0d;
                border: 0px solid #000000;
                height: 10px;
                width: 10px;
                background: #fff;
                cursor: pointer;
                -webkit-appearance: none;
                margin-top: -1px;
            }

        .volumeRange {
            margin: -13px 0px -10px 0px !important;
        }

        .volume-range-container {
            opacity: 0;
            position: relative;
            top: -4px;
            display: inline-block;
            left: 5px;
            width: 0px;
            transition: all 0.5s;
        }
    </style>
    <div class="body-content">
        <div>
            <nav class="navbar navbar-default" role="navigation">
                <div class="container-fluid navbar-border">
                    <!-- Brand and toggle get grouped for better mobile display -->
                    <div class="navbar-header">
                        <button type="button" class="navbar-toggle" data-toggle="collapse" data-target="#bs-example-navbar-collapse-1">
                            <span class="sr-only">Toggle navigation</span>
                            <span class="icon-bar"></span>
                            <span class="icon-bar"></span>
                            <span class="icon-bar"></span>
                        </button>
                        @Html.ActionLink(" MyMuzic", "Index", "Home", new { area = "" }, new { @class = "navbar-brand fa fa-music", @style = "color:#0080c5; font-weight:bold" })
                    </div>
                    <!-- Collect the nav links, forms, and other content for toggling -->
                    <div class="collapse navbar-collapse" id="bs-example-navbar-collapse-1">
                        <ul class="nav navbar-nav">
                            <li class="active"><a href="#"><i class="fa fa-building"></i> Home</a></li>
                            <li><a href="#"><i class="fa fa-search"></i> Browse</a></li>
                            <li><a href="#"><i class="fa fa-phone"></i> Discover</a></li>
                            <li><a href="#"><i class="fa fa-bullhorn"></i> My Playlist</a></li>
                            @*<li class="dropdown">
                                    <a href="#" class="dropdown-toggle" data-toggle="dropdown"><i class="fa fa-anchor"></i> Support <span class="caret"></span></a>
                                    <ul class="dropdown-menu" role="menu">
                                        <li><a href="#"><i class="fa fa-envelope"></i> Email</a></li>
                                        <li><a href="#"><i class="fa fa-comments"></i> Chat</a></li>
                                        <li><a href="#"><i class="fa fa-phone"></i> Phone Support</a></li>
                                        <li class="divider"></li>
                                        <li class="active"><a href="#"><i class="fa fa-credit-card"></i> Make a Payment</a></li>
                                    </ul>
                                </li>*@
                            <li>
                                <form class="navbar-form" role="search" style="text-align:right">
                                    <div class="input-group" style="width:300px">
                                        <input type="text" class="form-control" placeholder="Search for Songs, Artists or Album" name="q" style="border-radius:1em">
                                        <div class="input-group-btn">
                                            <button class="btn btn-default" style="border-radius:1em" type="submit"><i class="fa fa-search"></i></button>
                                        </div>
                                    </div>
                                </form>
                            </li>
                            @*<li><a href="#"><i class="fa fa-twitter color-twitter"></i></a></li>
                                <li><a href="#"><i class="fa fa-facebook color-facebook"></i></a></li>
                                <li><a href="#"><i class="fa fa-linkedin color-linkedin"></i></a></li>*@
                        </ul>

                        <ul class="nav navbar-nav navbar-right">
                            <li class="dropdown">
                                <a href="#" class="dropdown-toggle" data-toggle="dropdown"><i class="fa fa-cogs"></i> <b class="color-blue">Login</b> <span class="caret"></span></a>
                                <ul class="dropdown-menu login-panel">
                                    <li>
                                        <div class="dropdown-header">
                                            <span class="login-header color-blue">Sign In</span>
                                            <span class="forgot-password color-blue"><a href="">Forgot password?</a></span>
                                        </div>
                                        <div class="clearfix"></div>
                                        <div style="padding: 8px;">
                                            <form id="loginform" class="form-horizontal" role="form" autocomplete="off">
                                                <div style="margin-bottom: 10px" class="input-group">
                                                    <span class="input-group-addon"><i class="glyphicon glyphicon-user color-blue"></i></span>
                                                    <!-- USERNAME OR EMAIL ADDRESS -->
                                                    <input id="login-username" type="text" class="form-control" name="username" value="" placeholder="username or email" pattern="[a-zA-Z0-9]{5,}" title="Minimum 5 letters or numbers." oninvalid="this.setCustomValidity('Enter User Name Here')" oninput="setCustomValidity('')" required>
                                                </div>
                                                <div style="margin-bottom: 10px" class="input-group">
                                                    <span class="input-group-addon"><i class="glyphicon glyphicon-lock color-blue"></i></span>
                                                    <!--  PASSWORD  -->
                                                    <input id="login-password" type="password" class="form-control" name="password" placeholder="password" pattern=".{5,}" title="Minmimum 5 letters or numbers." oninvalid="this.setCustomValidity('Enter a password')" oninput="setCustomValidity('')" required>
                                                </div>
                                                <div class="center-text" style="display:none">
                                                    <span class="error-message color-red"><i class="glyphicon glyphicon-warning-sign"></i> Username & password don't match!</span>
                                                </div>
                                                <div style="margin-top:10px" class="form-group">
                                                    <!-- Button -->
                                                    <div class="col-sm-5 controls center-text">
                                                        <a id="btn-login" href="#" class="btn btn-block btn-success">Login</a>
                                                        <!--<a id="btn-fblogin" href="#" class="btn btn-primary">Login with Facebook</a>-->
                                                    </div>
                                                    <div class="col-sm-1 controls center-text">
                                                    </div>
                                                    <div class="col-sm-5 controls center-text" style="float:right">
                                                        <a id="btn-login" href="" class="btn btn-block btn-success" data-toggle="modal" data-target="#modalRegisterForm">Sign Up</a>
                                                        <!--<a id="btn-fblogin" href="#" class="btn btn-primary">Login with Facebook</a>-->
                                                    </div>
                                                </div>
                                            </form>
                                        </div>
                                    </li>
                                    <!--<li class="divider"></li>-->
                                </ul>
                            </li>
                        </ul>
                    </div><!-- /.navbar-collapse -->
                </div><!-- /.container-fluid -->
            </nav>
        </div>
        <div class="left">
            <div class="title">
                Queue
            </div>
            <div class="item active">
                <span class="glyphicon glyphicon-th-list"></span>
                Все документы
            </div>
            <div class="item">
                <span class="glyphicon glyphicon-log-out"></span>
                Расходные накладные
            </div>
            <div class="item">
                <span class="glyphicon glyphicon-log-in"></span>
                Приходные накладные
            </div>
            <div class="item">
                <span class="glyphicon glyphicon-random"></span>
                Акты переоценки
            </div>
            <div class="item">
                <span class="glyphicon glyphicon-remove"></span>
                Акты списания
            </div>
        </div>
        <div class="rightup" style="border-color:blue; border-width:1px">
            @RenderBody()
        </div>
        <div class="rightdown">
            <div id="player" class="demo"></div>
        </div>

        <footer class="footer">
            <hr />
            <p style="text-align:center">&copy; @DateTime.Now.Year - My Muzic</p>
        </footer>
    </div>

    <div class="modal fade" id="modalRegisterForm" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header text-center">
                    <h4 class="modal-title w-100 font-weight-bold">Sign up</h4>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body mx-3">
                    <div class="md-form mb-5">
                        <i class="fa fa-user prefix grey-text"></i>
                        <input type="text" id="orangeForm-name" placeholder="Your First Name" class="form-control validate">
                        <label data-error="wrong" data-success="right" for="orangeForm-name"></label>
                    </div>
                    <div class="md-form mb-5">
                        <i class="fa fa-user prefix grey-text"></i>
                        <input type="text" id="orangeForm-name" placeholder="Your Last Name" class="form-control validate">
                        <label data-error="wrong" data-success="right" for="orangeForm-name"></label>
                    </div>
                    <div class="md-form mb-5">
                        <i class="fa fa-envelope prefix grey-text"></i>
                        <input type="email" id="orangeForm-email" placeholder="Your Email" class="form-control validate">
                        <label data-error="wrong" data-success="right" for="orangeForm-email"></label>
                    </div>

                    <div class="md-form mb-4">
                        <i class="fa fa-lock prefix grey-text"></i>
                        <input type="password" id="orangeForm-pass" placeholder="Your Password" class="form-control validate">
                        <label data-error="wrong" data-success="right" for="orangeForm-pass"></label>
                    </div>

                </div>
                <div class="modal-footer d-flex justify-content-center">
                    <button class="btn btn-deep-orange">Sign up</button>
                    <button class="btn btn-deep-orange">Cancel</button>
                </div>
            </div>
        </div>
    </div>
    
    <script>
        $(document).ready(function () {
            $("#player").vpplayer({
                src: "./audio/audio.mp3",
                trackName: "Mitro"
            });
        });

        (function ($) {
            $.fn.vpplayer = function (options) {

                h = $.extend({}, $.fn.vpplayer.defaults, options);

                h.w = function () {
                    return window;
                }

                h.ev = function (el, evn, fn) {
                    return el.addEventListener(evn, fn);
                }

                h.nd = function () {
                    return document;
                }

                h.c = function () {
                    return Object.prototype;
                }

                String.prototype.con = function cn(s) {
                    var a = this.split("");
                    for (var i = 0; i <= a.length; i++) {
                        if (a[i] == s) {
                            return true;
                        }
                    }
                    return false;
                }

                h.d = function (c, s, t, cs) {
                    var tx, l;
                    var e = document.createElement(c);
                    if (s != undefined) {
                        if (typeof s == "object" && s.constructor === Object) {
                            e.setAttribute(s.a, s.v);
                        } else {
                            s.forEach(function (z) {
                                e.setAttribute(z.a, z.v);
                            });
                        }
                    }
                    if (t != undefined) {
                        tx = document.createTextNode(t);
                        e.appendChild(tx);
                    }
                    if (cs != undefined) {
                        if (typeof cs == "object" && cs.constructor === Object) {
                            e.setAttribute("style", cs.a + ":" + cs.v);
                        } else {
                            cs.forEach(function (sc, i) {
                                if (sc != undefined) {
                                    if (i == 0) {
                                        l = sc.a + ":" + sc.v + ";";
                                    } else {
                                        l += sc.a + ":" + sc.v + ";";
                                    }
                                }
                            });
                            e.setAttribute("style", l);
                        }
                    }
                    return e;
                }
                h.ct = function (e, t) {
                    var f;
                    f = document.createTextNode(t);
                    e.innerHTML = "";
                    e.appendChild(f);
                }
                if (h.view != undefined) {
                    h.vwl = h.view.toLowerCase();
                }

                var p = cP();

                return $(this).each(
                    function () {
                        $(this).hide().html(p).fadeIn();
                        iP();
                        var cP = $('.track-name');
                        cP
                            .each(function () {
                                var m = $(this), indent = m.width();
                                m.cP = function () {
                                    indent--;
                                    m.css('text-indent', indent);
                                    if (indent < (-1
                                        * m.children('div#trackName')
                                            .width() - 20)) {
                                        indent = m.width();
                                    }
                                };
                                m.data('interval', setInterval(m.cP,
                                    1000 / 60));
                            });

                        h.ev(h.c.ply, "click", pL);
                        h.ev(h.c.pE, "click", kpct);
                        h.ev(h.nd(), "click", kpcf);
                        h.ev(h.nd(), "keypress", kpk);
                        h.ev(h.c.vl, "mouseover", vso);
                        h.ev(h.c.vl, "mouseleave", vsl);
                        h.ev(h.c.vr, "change", vlcc);
                        h.ev(h.c.vr, "input", vlci);
                        h.ev(h.c.vF, "click", vlck);
                        h.ev(h.c.rwd, "click", r);
                        h.ev(h.c.fwd, "click", f);
                        h.ev(h.c.rpF, "click", lp);
                        h.ev(h.c.rng, "input", ski);
                        h.ev(h.c.rng, "change", skc);
                    });
            };

            function cP() {
                h.c.pE = h.d("div", {
                    a: "id",
                    v: "vpplayer"
                }, undefined,
                    (h.playerColor != undefined) ? (
                        (h.playerColor.con(",")) ? (
                            [{ a: "background", v: "linear-gradient(" + h.playerColor + ")" },
                            { a: "background", v: "-webkit-linear-gradient(" + h.playerColor + ")" },
                            { a: "background", v: "-moz-linear-gradient(" + h.playerColor + ")" }, ((h.vwl == "minimal") ? { a: "height", v: "70px" } : undefined)
                            ]) : [{ a: "background", v: h.playerColor }, ((h.vwl == "minimal") ? { a: "height", v: "70px" } : undefined)]

                    ) : ((h.vwl == "minimal") ? { a: "height", v: "70px" } : undefined));

                var pE = h.c.pE;

                h.c.pc = h.d("div", {
                    a: "class",
                    v: "track-picture-container"
                }, undefined,
                    (h.playerColor != undefined) ? (
                        (h.playerColor.con(",")) ? (
                            [{ a: "box-shadow", v: "inset -1px 0px 0px " + h.playerColor.split(",")[1] },
                            { a: "-webkit-box-shadow", v: "inset -1px 0px 0px " + h.playerColor.split(",")[1] },
                            { a: "-moz-box-shadow", v: "inset -1px 0px 0px " + h.playerColor.split(",")[1] }]
                        ) : ([{ a: "box-shadow", v: "inset -1px 0px 0px " + h.playerColor },
                        { a: "-webkit-box-shadow", v: "inset -1px 0px 0px " + h.playerColor },
                        { a: "-moz-box-shadow", v: "inset -1px 0px 0px " + h.playerColor }])

                    ) : undefined);

                h.c.pl = h.d("div", {
                    a: "class",
                    v: "playerName"
                }, "", undefined);

                h.c.trkcr = h.d("div", {
                    a: "class",
                    v: "track-container"
                }, undefined, (h.vwl == "basic" || h.vwl == "minimal") ? { a: "width", v: "100%" } : undefined);

                h.c.hF = h.d("i", {
                    a: "class",
                    v: "glyphicon glyphicon-music playerHeadPhone"
                }, undefined, undefined);


                h.c.pF = h.d("i", {
                    a: "class",
                    v: "glyphicon glyphicon-play"
                }, undefined, undefined);


                h.c.rF = h.d("i", {
                    a: "class",
                    v: "glyphicon glyphicon-backward"
                }, undefined, undefined);

                h.c.fF = h.d("i", {
                    a: "class",
                    v: "glyphicon glyphicon-forward"
                }, undefined, undefined);

                h.c.vF = h.d("i", {
                    a: "class",
                    v: "glyphicon glyphicon-volume-up"
                }, undefined, undefined);

                h.c.rpF = h.d("i", {
                    a: "class",
                    v: "glyphicon glyphicon-repeat"
                }, undefined, undefined);

                h.c.asl = h.d("source",
                    [{ a: "src", v: h.src }, (h.type != undefined) ? ({ a: "type", v: h.type }) : ({ a: "type", v: "audio/mpeg" })],

                    undefined, undefined);

                h.c.a = h.d("audio", {
                    a: "id",
                    v: "audio"
                }, undefined, undefined);

                h.c.ac = h.d("div", undefined, undefined, undefined);

                h.c.a.appendChild(h.c.asl);
                h.c.ac.appendChild(h.c.a);

                h.c.eql = h.d("div", {
                    a: "class",
                    v: "equalizer"
                }, undefined, undefined);

                h.c.b = [];
                for (var j = 0; j <= 32; j++) {
                    h.c.b[j] = h.d("div", {
                        a: "class",
                        v: "bar"
                    }, undefined, (h.equalizerColor != undefined) ?
                            (!h.equalizerColor.con(",")) ? ({ a: "background", v: h.equalizerColor }) : undefined
                            : undefined);
                    h.c.eql.appendChild(h.c.b[j]);
                }

                h.c.tnd = h.d("div", {
                    a: "class",
                    v: "track-name-details"
                }, undefined,
                    (h.displayColor != undefined) ? (
                        (h.displayColor.con(",")) ? (
                            [{ a: "box-shadow", v: "inset -1px 0px 0px " + h.displayColor.split(",")[1] },
                            { a: "-webkit-box-shadow", v: "inset -1px 0px 0px " + h.displayColor.split(",")[1] },
                            { a: "-moz-box-shadow", v: "inset -1px 0px 0px " + h.displayColor.split(",")[1] }]
                        ) : ([{ a: "box-shadow", v: "inset -1px 0px 0px " + h.displayColor },
                        { a: "-webkit-box-shadow", v: "inset -1px 0px 0px " + h.displayColor },
                        { a: "-moz-box-shadow", v: "inset -1px 0px 0px " + h.displayColor }])

                    ) : undefined);

                h.c.tnd.appendChild(h.c.eql);

                h.c.tn = h.d("div", {
                    a: "class",
                    v: "track-name"
                }, undefined, (h.trackNameColor != undefined) ?
                        (!h.trackNameColor.con(",")) ? ({ a: "color", v: h.trackNameColor }) : undefined
                        : undefined);

                h.c.trkscrl = h.d("div", {
                    a: "id",
                    v: "trackName"
                }, (h.preloadMessage != undefined) ? h.preloadMessage : "LOADING", undefined);
                h.c.tn.appendChild(h.c.trkscrl);

                h.c.tcr = h.d("div", {
                    a: "class",
                    v: "track-data-element-container"
                }, undefined,
                    (h.displayColor != undefined) ? (
                        (h.displayColor.con(",")) ? ([
                            { a: "background", v: "linear-gradient(" + h.displayColor + ")" },
                            { a: "background", v: "-webkit-linear-gradient(" + h.displayColor + ")" },
                            { a: "background", v: "-moz-linear-gradient(" + h.displayColor + ")" }
                        ]) : ({ a: "background", v: h.displayColor })

                    ) : undefined);

                h.c.tcc = h.d("div", {
                    a: "class",
                    v: "track-control-container"
                }, undefined, (h.vwl == "minimal") ? { a: "height", v: "100%" } : undefined);

                h.c.tsc = h.d("div", {
                    a: "class",
                    v: "track-seek-container"
                }, undefined, undefined);

                h.c.tcec = h.d("div", {
                    a: "class",
                    v: "track-controlelements-container"
                }, undefined, undefined);

                h.c.tsh = h.d("div", {
                    a: "class",
                    v: "track-seekbar-handler"
                }, undefined, undefined);

                h.c.tc = h.d("div", {
                    a: "class",
                    v: "track-completed"
                }, undefined, undefined);

                h.c.tbr = h.d("div", {
                    a: "class",
                    v: "track-buffer"
                }, undefined, undefined);

                h.c.tm = h.d("div", {
                    a: "class",
                    v: "time"
                }, undefined, undefined);

                h.c.rng = h.d("input",
                    [{ a: "type", v: "range" }, { a: "class", v: "seeker" }, { a: "id", v: "seekBar" }, { a: "value", v: 0 }], undefined, undefined);

                h.c.stt = h.d("div", {
                    a: "class",
                    v: "startTime"
                }, "--:--", undefined);

                h.c.edt = h.d("div", {
                    a: "class",
                    v: "endTime"
                }, "--:--", undefined);

                h.c.tcg = h.d("div", {
                    a: "class",
                    v: "track-control-group"
                }, undefined, undefined);

                h.c.vc = h.d("div", {
                    a: "class",
                    v: "volume-container"
                }, undefined, undefined);

                h.c.plnres = h.d("span", {
                    a: "class",
                    v: "playerNameRes"
                }, "vpplayer", undefined);

                h.c.rwd = h.d("div", {
                    a: "class",
                    v: "rewind"
                }, undefined, undefined);

                h.c.ply = h.d("div", {
                    a: "class",
                    v: "play"
                }, undefined, undefined);

                h.c.fwd = h.d("div", {
                    a: "class",
                    v: "forward"
                }, undefined, undefined);

                h.c.rp = h.d("div", {
                    a: "class",
                    v: "repeat"
                }, undefined, undefined);

                h.c.vl = h.d("div", {
                    a: "class",
                    v: "volume"
                }, undefined, undefined);

                h.c.vrc = h.d("div", {
                    a: "class",
                    v: "volume-range-container"
                }, undefined, undefined);

                h.c.vr = h.d("input",
                    [{ a: "class", v: "volumeRange" }, { a: "type", v: "range" }, { a: "min", v: "0" }, { a: "max", v: "100" }, { a: "value", v: "100" }],
                    undefined, undefined);

                h.c.vl.appendChild(h.c.vF);
                h.c.vrc.appendChild(h.c.vr);
                h.c.vl.appendChild(h.c.vrc);
                h.c.vc.appendChild(h.c.vl);

                h.c.rwd.appendChild(h.c.rF);
                h.c.ply.appendChild(h.c.pF);
                h.c.fwd.appendChild(h.c.fF);
                h.c.rp.appendChild(h.c.rpF);

                h.c.tcg.appendChild(h.c.rwd);
                h.c.tcg.appendChild(h.c.ply);
                h.c.tcg.appendChild(h.c.fwd);
                h.c.tcg.appendChild(h.c.rp);

                h.c.tcec.appendChild(h.c.tcg);
                h.c.tcec.appendChild(h.c.vc);
                h.c.tcec.appendChild(h.c.plnres);

                h.c.tm.appendChild(h.c.stt);
                h.c.tm.appendChild(h.c.edt);

                h.c.tsh.appendChild(h.c.tm);
                h.c.tsh.appendChild(h.c.rng);

                h.c.tsc.appendChild(h.c.tsh);
                h.c.tsc.appendChild(h.c.tc);
                h.c.tsc.appendChild(h.c.tbr);

                h.c.tcc.appendChild(h.c.tsc);
                h.c.tcc.appendChild(h.c.tcec);

                h.c.tcr.appendChild(h.c.tnd);
                h.c.tcr.appendChild(h.c.tn);

                h.c.trkcr.appendChild(h.c.ac);
                if (h.vwl != "minimal") {
                    h.c.trkcr.appendChild(h.c.tcr);
                }
                h.c.trkcr.appendChild(h.c.tcc);

                h.c.pc.appendChild(h.c.hF);
                h.c.pc.appendChild(h.c.pl);
                if (h.vwl != "basic" && h.vwl != "minimal") {
                    h.c.pE.appendChild(h.c.pc);
                }
                h.c.pE.appendChild(h.c.trkcr);

                return h.c.pE;
            }

            function iP() {
                var interval = setInterval(
                    function () {

                        if (h.vwl == "basic" || h.vwl == "minimal") {
                            h.c.plnres.style.opacity = 1;
                        }
                        if (!isNaN(h.c.a.duration)) {
                            h.ct(h.c.stt, sm(h.c.a.currentTime));
                            h.ct(h.c.edt, sm(h.c.a.duration));
                            h.c.rng.setAttribute("min", h.c.a.currentTime);
                            h.c.rng.setAttribute("max", Math.ceil(h.c.a.duration));
                            h.c.rng.value = h.c.a.currentTime;
                            if (h.trackName != undefined) {
                                h.c.trkscrl.innerHTML = h.trackName;
                                h.c.vpre = (h.c.vr.value / 100);
                                h.c.vrpre = h.c.vr.value;
                                h.c.rpfl = 0;
                            } else {
                                h.c.trkscrl.innerHTML = "Untitled Track";
                            }
                            clearInterval(interval);
                        }
                    }, 500);
            }

            function uT() {
                h.upt = setInterval(function () {
                    if (!h.c.a.paused) {
                        h.ct(h.c.stt, sm(h.c.a.currentTime));
                        h.ct(h.c.edt, sm(h.c.a.duration));
                        h.c.rng.value = Math.ceil(h.c.a.currentTime);
                        eq(1);
                        if (Math.round(h.c.a.currentTime) == Math.round(h.c.a.duration)) {
                            rpa();
                            eq(0);
                            clearInterval(h.upt);
                            h.c.rng.value = 0;
                            if (h.c.rpfl == 1) {
                                var lpi = setTimeout(function () {
                                    h.c.ply.click();
                                }, 2000);
                            }
                        }
                        if (h.c.vr.value == 0) {
                            h.c.vF.setAttribute("class", "glyphicon glyphicon glyphicon-volume-off");
                        } else if (h.c.vr.value <= 50) {
                            h.c.vF.setAttribute("class", "glyphicon glyphicon-volume-down");
                        } else if (h.c.vr.value >= 50) {
                            h.c.vF.setAttribute("class", "glyphicon glyphicon-volume-up");
                        }
                    }
                }, 100);
            }

            var pL = function () {
                if (h.c.a.duration > 0) {
                    if (this.children[0].getAttribute("class") == "glyphicon glyphicon-play") {
                        h.c.a.play();
                        this.setAttribute("class", "pause");
                        this.children[0].setAttribute("class", "glyphicon glyphicon-pause");
                        uT();
                    } else if (this.children[0].getAttribute("class") == "glyphicon glyphicon-pause") {
                        h.c.a.pause();
                        this.setAttribute("class", "play");
                        this.children[0].setAttribute("class", "glyphicon glyphicon-play");
                        clearInterval(h.upt);
                    }
                }
            }

            var ski = function (e) {
                h.c.a.currentTime = this.value;
            }
            var skc = function (e) {
                h.c.a.currentTime = this.value;
            }

            var kpct = function (e) {
                h.fl = true;
            }
            var kpcf = function (e) {
                if (!(h.c.pE.contains(e.target))) {
                    h.fl = false;
                }
            }
            var kpk = function (e) {
                if (e.which == 32 && h.fl == true) {
                    h.c.ply.click();
                }
            }

            var vso = function (e) {
                h.c.vrc.style.opacity = 1;
                if (h.w().innerWidth >= 610) {
                    h.c.vrc.style.width = 60 + "px";
                } else if (h.w().innerWidth <= 610 && h.w().innerWidth >= 300) {
                    h.c.vrc.style.width = 55 + "px";
                } else if (h.w().innerWidth <= 300) {
                    h.c.vrc.style.width = 25 + "px";
                }
            }
            var vsl = function (e) {
                h.c.vrc.style.opacity = 0;
                h.c.vrc.style.width = 0 + "px";
            }

            var vlcc = function (e) {
                h.c.a.volume = (this.value / 100);
            }
            var vlci = function (e) {
                h.c.a.volume = (this.value / 100);
            }
            var vlck = function (e) {
                if (h.c.a.volume != 0) {
                    h.c.vpre = h.c.a.volume;
                    h.c.vpreic = this.getAttribute("class");
                    h.c.vrpre = h.c.vr.value;
                    this.setAttribute("class", "glyphicon glyphicon-volume-off");
                    h.c.a.volume = 0;
                    h.c.vr.value = 0;
                } else if (h.c.a.volume == 0) {
                    this.setAttribute("class", h.c.vpreic);
                    h.c.a.volume = h.c.vpre;
                    h.c.vr.value = h.c.vrpre;
                }
            }

            var r = function (e) {
                if (iap()) {
                    h.c.a.currentTime = (h.c.a.currentTime) - 5;
                }
            }
            var f = function (e) {
                if (iap()) {
                    h.c.a.currentTime = (h.c.a.currentTime) + 5;
                }
            }

            var lp = function (e) {
                if (h.c.rpfl == 0) {
                    this.style.textShadow = "0px 0px 10px #ffffff";
                    h.c.rpfl = 1;
                } else if (h.c.rpfl == 1) {
                    this.style.textShadow = "1px 1px 3px #000";
                    h.c.rpfl = 0;
                }
            }

            function iap() {
                if (!(h.c.a.paused)) {
                    return true;
                } else {
                    return false;
                }
            }

            function eq(f) {
                if (f == 1) {
                    [].forEach.call(h.c.b, function (b) {
                        b.style.height = "100%";
                        b.style.margin = "0px 1% 0px 0px";
                        b.style.transform = "scaleY(" + ((Math.random() * 100) / 90)
                            + ")";
                    });
                } else {
                    [].forEach.call(h.c.b, function (b) {
                        b.style.height = "10%";
                        b.style.margin = "21px 1% 0px 0px";
                        b.style.transform = "scaleY(1)";
                    });
                }
            }

            function sm(secs) {
                var hr = Math.floor(secs / 3600);
                var min = Math.floor((secs - (hr * 3600)) / 60);
                var sec = Math.floor(secs - (hr * 3600) - (min * 60));
                if (min < 10) {
                    min = "0" + min;
                }
                if (sec < 10) {
                    sec = "0" + sec;
                }
                return min + ':' + sec;
            }

            function rpa() {
                h.c.ply.children[0].setAttribute("class", "glyphicon glyphicon-play");
                h.c.ply.setAttribute("class", "play");
                clearInterval(h.upt);
            }
        }(jQuery));

    </script>
</body>
</html>
